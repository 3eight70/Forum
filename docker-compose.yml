version: '3'

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: gbhfns
      POSTGRES_DB: filesystem
    ports:
      - "5432:5432"

  postgres_us:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: gbhfns
      POSTGRES_DB: userapp
    ports:
      - "5433:5433"

  postgres_for:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: gbhfns
      POSTGRES_DB: forumapp
    ports:
      - "5434:5434"

  postgres_notif:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: gbhfns
      POSTGRES_DB: notificationapp
    ports:
      - "5435:5435"

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  minio:
    image: quay.io/minio/minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_DOMAIN: localhost
    command: server --console-address ":9001" /data
    volumes:
      - minio_storage:/data

  service-registry:
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
        
  user-app:
    build:
      context: ./user-app
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/filesystem
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: gbhfns
        SPRING_REDIS_HOST: redis
        SPRING_REDIS_PORT: 6379
    depends_on:
      - postgres
      - redis

  forum-core:
    build:
      context: ./forum-core
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/filesystem
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: gbhfns
    depends_on:
      - postgres
    
  file-app:
    build:
      context: ./file-app
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/filesystem
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: gbhfns
    depends_on:
      - postgres
      - minio

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    hostname: broker
    container_name: broker
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9007:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"
      
volumes:
  minio_storage: {}
